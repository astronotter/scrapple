{"version":3,"sources":["index.js"],"names":["get","url","a","fetch","method","res","json","post","body","headers","JSON","stringify","HOSTNAME","PORT","joinGame","game","getGame","player","Piece","props","style","value","other","width","height","lineHeight","display","cursor","backgroundColor","verticalAlign","textAlign","margin","styles","StyleSheet","create","flexFlow","board","overflow","scrollbarWidth","flexGrow","flexShrink","scrollSnapAlign","marginLeft","marginRight","marginTop","marginBottom","row","whiteSpace","ReactDOM","render","rel","href","integrity","crossorigin","path","component","useState","setPlayer","setGame","Array","fill","placements","setPlacements","dragged","setDragged","scrollView","useRef","params","useParams","promiseInProgress","usePromiseTracker","isOurTurn","nextPlayer","order","useEffect","id","callback","delay","savedCallback","current","setInterval","clearInterval","useInterval","rack","split","n","Math","sqrt","length","color","pending","push","floor","k","pop","includes","placeable","className","css","ref","map","_","j","i","draggable","onDrag","e","preventDefault","indexOf","onDragOver","opacity","onDrop","justifyContent","el","disabled","onClick","A","trackPromise","move","takeTurn","nextMove","join","then","scrollTo","left","scrollLeftMax","top","scrollTopMax","behavior","history","useHistory","fluid","onSubmit","size","maxPlayers","Group","Label","Control","as","variant","type","document","getElementById"],"mappings":"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","file":"static/js/main.035ceccd.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Route,\r\n    Switch, useParams, useHistory } from 'react-router-dom'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { StyleSheet, css } from 'aphrodite'\r\nimport { usePromiseTracker, trackPromise } from 'react-promise-tracker'\r\n\r\n\r\nconst get = async (url) => {\r\n    let res = await fetch(url, { method:'GET' });\r\n    return await res.json()\r\n}\r\nconst post = async (url, body) => {\r\n    let res = await fetch(url, {\r\n        method:'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: body? JSON.stringify(body) : ''\r\n    });\r\n    return await res.json()\r\n}\r\nconst HOSTNAME = 'otterspace.ca'\r\nconst PORT = 3000\r\n\r\nconst joinGame = (game) => post(`https://${HOSTNAME}:${PORT}/players?game=${game}`)\r\nconst getGame = (game, player) => get(`https://${HOSTNAME}:${PORT}/games/${game}?player=${player}`)\r\nconst takeTurn = (move, game, player, placements) => post(`https://${HOSTNAME}:${PORT}/moves/${move}?game=${game}&player=${player}`, { placements:placements })\r\nconst createGame = () => post(`https://${HOSTNAME}:${PORT}/games`, { size:15, maxPlayers:2 })\r\n\r\n// Taken from\r\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\nfunction useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}\r\n\r\nfunction Piece(props) {\r\n    const { style, value, ...other } = props\r\n    return (\r\n        <div {...other}\r\n            style={{\r\n                width: '80px',\r\n                height: '80px',\r\n                lineHeight: '80px',\r\n                display: 'inline-block',\r\n                cursor: 'pointer',\r\n                backgroundColor: '#eee',\r\n                verticalAlign: 'middle',\r\n                textAlign: 'center',\r\n                margin: '2px',\r\n                ...style\r\n            }\r\n        }>{value}</div>\r\n    )\r\n}\r\n\r\nfunction placeable(board, placements) {\r\n    const n = Math.sqrt(board.length)\r\n    const color = Array(board.length).fill(0)\r\n    const pending = []\r\n    \r\n    pending.push(Math.floor(board.length/2))\r\n    while (pending.length > 0) {\r\n        const k = pending.pop()\r\n        if (board[k] ===' ' && !placements.includes(k)) {\r\n            color[k] = 2\r\n            continue\r\n        }\r\n        else\r\n            color[k] = 1\r\n        \r\n        if (k-1 >= 0 && !color[k-1])\r\n            pending.push(k-1)\r\n        if (k+1 < board.length && !color[k+1])\r\n            pending.push(k+1)\r\n        if (k-n >= 0 && !color[k-n])\r\n            pending.push(k-n)\r\n        if (k+n < board.length && !color[k+n])\r\n            pending.push(k+n)\r\n    }\r\n    return color\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    game: {\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        height: '100vh'\r\n    },\r\n    board: {\r\n        overflow: 'scroll',\r\n        scrollbarWidth: 'none',\r\n        flexGrow: '1',\r\n        flexShrink: '1',\r\n        scrollSnapAlign: 'center',\r\n        marginLeft: '10px',\r\n        marginRight: '10px',\r\n        marginTop: '10px',\r\n        marginBottom: '10px'\r\n    },\r\n    row: {\r\n        whiteSpace: 'nowrap'\r\n    },\r\n})\r\n\r\nfunction Game(props) {\r\n    const [player, setPlayer] = useState(null)\r\n    const [game, setGame] = useState(null)\r\n    const [placements, setPlacements] = useState(Array(7).fill(null))\r\n    const [dragged, setDragged] = useState(null)\r\n    const scrollView = useRef(null)\r\n    const params = useParams()\r\n    const {promiseInProgress} = usePromiseTracker()\r\n    const isOurTurn = game && player && game.nextPlayer === player.order\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (!player)\r\n                setPlayer(await joinGame(params.game))\r\n            else if (!game)\r\n                setGame(await getGame(params.game, player.id))\r\n        })()\r\n    }, [player, game])\r\n\r\n    useInterval(() => {\r\n        (async () => {\r\n            setGame(await getGame(params.game, player.id))\r\n        })()\r\n    }, isOurTurn? null : 3000)\r\n\r\n    if (!game || !player)\r\n        return <div>Loading...</div>\r\n\r\n    const rack = player.rack.split(',')\r\n    const board = game.board.split(',')\r\n\r\n    function submit(e) {\r\n        const A = []\r\n        for (let i = 0; i < placements.length; i++)\r\n            if (placements[i] !== null) {\r\n                A.push(placements[i])\r\n                A.push(rack[i])\r\n            }\r\n        trackPromise(\r\n            takeTurn(game.nextMove, params.game, player.id, A.join(','))\r\n            .then(res => {\r\n                setPlacements(Array(7).fill(null))\r\n                setPlayer({...player,...res.player})\r\n                setGame({...game,...res.game})\r\n        \r\n                scrollView.current.scrollTo({\r\n                    left: scrollView.current.scrollLeftMax/2,\r\n                    top: scrollView.current.scrollTopMax/2,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        ))\r\n    }\r\n\r\n    const n = Math.sqrt(board.length)\r\n    const color = placeable(board, placements)\r\n\r\n    return (\r\n        <div className={css(styles.game)}>\r\n        <div className={css(styles.board)} ref={scrollView}>\r\n        {Array(n).fill(0).map((_, j) =>\r\n        <div className={css(styles.row)}>\r\n        {Array(n).fill(0).map((_, i) =>\r\n        placements.includes(j*n+i)\r\n        ?   <Piece\r\n                key={j*n+i}\r\n                draggable={isOurTurn}\r\n                onDrag={e => {\r\n                    e.preventDefault();\r\n                    setDragged(placements.indexOf(j*n+i))\r\n                }}\r\n                onDragOver={e => e.preventDefault()}\r\n                value={rack[placements.indexOf(j*n+i)]}>\r\n            </Piece>\r\n        :   <Piece\r\n                style={{ opacity: (color[j*n+i] !== 0)? 1.0 : 0.5 }}\r\n                key={j*n+i}\r\n                draggable={false}\r\n                onDragOver={e => e.preventDefault()}\r\n                onDrop={e => {\r\n                    e.preventDefault();\r\n                    placements[dragged] = j*n+i;\r\n                    setPlacements(placements);\r\n                    setDragged(null)\r\n                }}\r\n                value={board[j*n+i]}>\r\n            </Piece>\r\n        )}\r\n        </div>\r\n        )}\r\n        </div>\r\n        <div style={{\r\n            display:'flex',\r\n            whiteSpace:'nowrap',\r\n            justifyContent:'center',\r\n            marginBottom: '10px'\r\n        }}>\r\n        {rack.map((el, i) => (\r\n        <Piece\r\n            key={i}\r\n            draggable={isOurTurn}\r\n            onDrag={e => {\r\n                e.preventDefault();\r\n                setDragged(i)\r\n            }}\r\n            onDragOver={e => e.preventDefault()}\r\n            onDrop={e => {\r\n                placements[dragged] = null;\r\n                setPlacements(placements);\r\n                setDragged(null)\r\n            }}\r\n            value={placements[i] === null? el : ' ' }>\r\n        </Piece>\r\n        ))}\r\n        <Button disabled={promiseInProgress || !isOurTurn} onClick={submit}>Done</Button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NewGameForm() {\r\n    const history = useHistory()\r\n    const {promiseInProgress} = usePromiseTracker()\r\n    function submit(e) {\r\n        e.preventDefault()\r\n        trackPromise(createGame().then(game => {\r\n            history.push(`/scrapple/games/${game.id}`)\r\n        }))\r\n    }\r\n    return (\r\n        <Container fluid>\r\n        <Row><Col>\r\n        <Form onSubmit={submit}>\r\n        <Form.Group>\r\n        <Form.Label>Number of Players</Form.Label>\r\n        <Form.Control as=\"select\">\r\n            <option>2</option>\r\n            <option>3</option>\r\n            <option>4</option>\r\n        </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n        <Form.Label>Board size</Form.Label>\r\n        <Form.Control as=\"select\">\r\n            <option>13</option>\r\n            <option>15</option>\r\n            <option>17</option>\r\n        </Form.Control>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" disabled={promiseInProgress}>\r\n            New Game\r\n        </Button>\r\n        </Form>\r\n        </Col></Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <link\r\n        rel=\"stylesheet\"\r\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\r\n        integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\r\n        crossorigin=\"anonymous\"\r\n        />\r\n        <Switch>\r\n            <Route path='/scrapple/games/:game' component={Game} />\r\n            <Route path='/scrapple/' component={NewGameForm} />\r\n        </Switch>\r\n    </Router>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}