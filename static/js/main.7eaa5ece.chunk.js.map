{"version":3,"sources":["index.js"],"names":["get","url","a","fetch","method","res","json","post","body","headers","JSON","stringify","HOSTNAME","PORT","joinGame","game","getGame","player","takeTurn","move","placements","Piece","props","style","value","other","width","height","lineHeight","display","cursor","backgroundColor","verticalAlign","textAlign","margin","ReactDOM","render","rel","href","integrity","crossorigin","path","component","useState","setPlayer","setGame","Array","fill","setPlacements","dragged","setDragged","scrollView","useRef","params","useParams","isOurTurn","nextPlayer","order","useEffect","id","callback","delay","savedCallback","current","setInterval","clearInterval","useInterval","rack","split","board","e","A","i","length","push","nextMove","join","scrollTo","left","scrollLeftMax","top","scrollTopMax","behavior","styles","StyleSheet","create","flexFlow","overflow","scrollbarWidth","flexGrow","flexShrink","scrollSnapAlign","row","whiteSpace","n","Math","sqrt","color","pending","floor","k","pop","includes","placeable","Board","className","css","map","_","j","draggable","onDrag","preventDefault","indexOf","onDragOver","opacity","onDrop","ref","el","disabled","onClick","history","useHistory","submit","size","maxPlayers","fluid","onSubmit","Group","Label","Control","as","variant","type","document","getElementById"],"mappings":"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","file":"static/js/main.7eaa5ece.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Route,\r\n    Switch, useParams, useHistory } from 'react-router-dom'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { StyleSheet, css } from 'aphrodite'\r\n\r\n\r\nconst get = async (url) => {\r\n    let res = await fetch(url, { method:'GET' });\r\n    return await res.json()\r\n}\r\nconst post = async (url, body) => {\r\n    let res = await fetch(url, {\r\n        method:'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: body? JSON.stringify(body) : ''\r\n    });\r\n    return await res.json()\r\n}\r\nconst HOSTNAME = 'otterspace.ca'\r\nconst PORT = 3000\r\n\r\nconst joinGame = (game) => post(`https://${HOSTNAME}:${PORT}/players?game=${game}`)\r\nconst getGame = (game, player) => get(`https://${HOSTNAME}:${PORT}/games/${game}?player=${player}`)\r\nconst takeTurn = (move, game, player, placements) => post(`https://${HOSTNAME}:${PORT}/moves/${move}?game=${game}&player=${player}`, { placements:placements })\r\nconst createGame = () => post(`https://${HOSTNAME}:${PORT}/games`, { size:15, maxPlayers:2 })\r\n\r\n// Taken from\r\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\nfunction useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}\r\n\r\nfunction Piece(props) {\r\n    const { style, value, ...other } = props\r\n    return (\r\n        <div {...other}\r\n            style={{\r\n                width: '80px',\r\n                height: '80px',\r\n                lineHeight: '80px',\r\n                display: 'inline-block',\r\n                cursor: 'pointer',\r\n                backgroundColor: '#eee',\r\n                verticalAlign: 'middle',\r\n                textAlign: 'center',\r\n                margin: '2px',\r\n                ...style\r\n            }\r\n        }>{value}</div>\r\n    )\r\n}\r\n\r\nfunction placeable(board, placements) {\r\n    const n = Math.sqrt(board.length)\r\n    const color = Array(board.length).fill(0)\r\n    const pending = []\r\n    \r\n    pending.push(Math.floor(board.length/2))\r\n    while (pending.length > 0) {\r\n        const k = pending.pop()\r\n        if (board[k] ===' ' && !placements.includes(k)) {\r\n            color[k] = 2\r\n            continue\r\n        }\r\n        else\r\n            color[k] = 1\r\n        \r\n        if (k-1 >= 0 && !color[k-1])\r\n            pending.push(k-1)\r\n        if (k+1 < board.length && !color[k+1])\r\n            pending.push(k+1)\r\n        if (k-n >= 0 && !color[k-n])\r\n            pending.push(k-n)\r\n        if (k+n < board.length && !color[k+n])\r\n            pending.push(k+n)\r\n    }\r\n    return color\r\n}\r\n\r\nfunction Game(props) {\r\n    const [player, setPlayer] = useState(null)\r\n    const [game, setGame] = useState(null)\r\n    const [placements, setPlacements] = useState(Array(7).fill(null))\r\n    const [dragged, setDragged] = useState(null)\r\n    const scrollView = useRef(null)\r\n    const params = useParams()\r\n    const isOurTurn = game && player && game.nextPlayer === player.order\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (!player)\r\n                setPlayer(await joinGame(params.game))\r\n            else if (!game)\r\n                setGame(await getGame(params.game, player.id))\r\n        })()\r\n    }, [player, game])\r\n\r\n    useInterval(() => {\r\n        (async () => {\r\n            setGame(await getGame(params.game, player.id))\r\n            /*if (!isOurTurn) {\r\n                scrollView.current.scrollTo({\r\n                    left: scrollView.current.scrollLeftMax/2,\r\n                    top: scrollView.current.scrollTopMax/2,\r\n                    behavior: 'smooth'\r\n                })\r\n            }*/\r\n        })()\r\n    }, isOurTurn? null : 3000)\r\n\r\n    if (!game || !player)\r\n        return <div>Loading...</div>\r\n\r\n    const rack = player.rack.split(',')\r\n    const board = game.board.split(',')\r\n\r\n    async function submit(e) {\r\n        const A = []\r\n        for (let i = 0; i < placements.length; i++)\r\n            if (placements[i] !== null) {\r\n                A.push(placements[i])\r\n                A.push(rack[i])\r\n            }\r\n        const res = await takeTurn(game.nextMove, params.game, player.id, A.join(','))\r\n        setPlacements(Array(7).fill(null))\r\n        setPlayer({...player,...res.player})\r\n        setGame({...game,...res.game})\r\n\r\n        scrollView.current.scrollTo({\r\n            left: scrollView.current.scrollLeftMax/2,\r\n            top: scrollView.current.scrollTopMax/2,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n        \r\n    const styles = StyleSheet.create({\r\n        game: {\r\n            display: 'flex',\r\n            flexFlow: 'column',\r\n            height: '100vh'\r\n        },\r\n        board: {\r\n            overflow: 'scroll',\r\n            scrollbarWidth: 'none',\r\n            flexGrow: '1',\r\n            flexShrink: '1',\r\n            scrollSnapAlign: 'center',\r\n        },\r\n        row: {\r\n            whiteSpace: 'nowrap'\r\n        },\r\n    })\r\n\r\n    const n = Math.sqrt(board.length)\r\n    const color = placeable(board, placements)\r\n    const Board = (props) => (\r\n        <div className={css(styles.board)} >\r\n        {Array(n).fill(0).map((_, j) =>\r\n        <div className={css(styles.row)}>\r\n            {Array(n).fill(0).map((_, i) =>\r\n            placements.includes(j*n+i)\r\n            ?   <Piece\r\n                    key={j*n+i}\r\n                    draggable={isOurTurn}\r\n                    onDrag={e => { e.preventDefault(); setDragged(placements.indexOf(j*n+i)) }}\r\n                    onDragOver={e => e.preventDefault()}\r\n                    value={rack[placements.indexOf(j*n+i)]}>\r\n                </Piece>\r\n            :   <Piece\r\n                    style={{ opacity: (color[j*n+i] !== 0)? 1.0 : 0.5 }}\r\n                    key={j*n+i}\r\n                    draggable={false}\r\n                    onDragOver={e => e.preventDefault()}\r\n                    onDrop={e => { placements[dragged] = j*n+i; setPlacements(placements); setDragged(null) }}\r\n                    value={board[j*n+i]}>\r\n                </Piece>\r\n            )}\r\n        </div>\r\n        )}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className={css(styles.game)}>\r\n            <Board board={board} placements={placements} ref={scrollView} isOurTurn={isOurTurn} />\r\n            <div className={css(styles.row)}>\r\n                {rack.map((el, i) => (\r\n                    <Piece\r\n                        key={i}\r\n                        draggable={isOurTurn}\r\n                        onDrag={e => { e.preventDefault(); setDragged(i) }}\r\n                        onDragOver={e => e.preventDefault()}\r\n                        onDrop={e => { placements[dragged] = null; setPlacements(placements); setDragged(null)} }\r\n                        value={placements[i] === null? el : ' ' }>\r\n                    </Piece>\r\n                ))}\r\n            <Button disabled={!isOurTurn} onClick={submit}>End Turn</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NewGameForm() {\r\n    const history = useHistory()\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        const game = await createGame()\r\n        history.push(`/scrapple/games/${game.id}`)\r\n    }\r\n    return (\r\n        <Container fluid>\r\n        <Row><Col>\r\n        <Form onSubmit={submit}>\r\n        <Form.Group>\r\n        <Form.Label>Number of Players</Form.Label>\r\n        <Form.Control as=\"select\">\r\n            <option>2</option>\r\n            <option>3</option>\r\n            <option>4</option>\r\n        </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n        <Form.Label>Board size</Form.Label>\r\n        <Form.Control as=\"select\">\r\n            <option>13</option>\r\n            <option>15</option>\r\n            <option>17</option>\r\n        </Form.Control>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n            New Game\r\n        </Button>\r\n        </Form>\r\n        </Col></Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <link\r\n        rel=\"stylesheet\"\r\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\r\n        integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\r\n        crossorigin=\"anonymous\"\r\n        />\r\n        <Switch>\r\n            <Route path='/scrapple/games/:game' component={Game} />\r\n            <Route path='/scrapple/' component={NewGameForm} />\r\n        </Switch>\r\n    </Router>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}